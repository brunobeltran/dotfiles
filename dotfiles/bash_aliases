# for sanity
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Bazel should always secretly be Bazelisk if possible.
alias bazel=bazelisk

# for a beep
alias beep='play -qn synth 1 sine 800 vol 1 '

# Use the mac names for our copy buffer commands. wl-copy is a Wayland
# replacement for xclip (requires the wl-clipboard package).
if [[ -z "$(which pbcopy)" ]]; then
    alias pbcopy='wl-copy'
    alias pbpaste='wl-paste'
fi

# makes all aliases accessible via sudo
alias sudo='sudo '

# always give me a python
if [[ -z "$(which python)" && -n "$(which python3)" ||
      -x "$(command -v lsb_release)" && ! -z "$(lsb_release -a | grep Debian)" ]]; then
    if [[ -z "$(ls ~/.miniconda*)" ]]; then
        alias python='python3'
        if [[ -n "$(which pip3)" ]]; then
            alias pip='pip3'
        fi
    fi
fi

# Create a Git worktree for Digital Biology
if [[ -d /Users/bruno/dbSDK ]]; then
    hgd () {
        local worktree_path;
        worktree_path="/Users/bruno/dbSDK/$1"
        if [[ -d "${worktree_path}" ]]; then
            echo "Worktree exists, taking you there!"
            cd "${worktree_path}"
            pwd
        else
            git show-ref --verify --quiet "refs/heads/$1"
            if [[ $? == 0 ]]; then
                echo "Checking out existing branch...$1"
                git worktree add "${worktree_path}" $1 && cd "${worktree_path}"
            else
                git worktree add "/Users/bruno/dbSDK/$1" main -b $1 && cd "${worktree_path}"
            fi
        fi
    }
    hgdelete () {
        local worktree_path;
        worktree_path="/Users/bruno/dbSDK/$1"
        if [[ -d "${worktree_path}" ]]; then
            echo -n "Attempting to remove git worktree at ${worktree_path}..."
            git worktree remove "${worktree_path}" && echo "Success!"
        else
            echo "Worktree path ${worktree_path} does not exist!" 1>&2
        fi
    }
fi
